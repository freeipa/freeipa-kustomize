# https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/
# https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: freeipa
spec:
  selector:
    matchLabels:
      app: freeipa
  serviceName: freeipa
  replicas: 1
  template:
    metadata:
      labels:
        app: freeipa
    spec:
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      serviceAccountName: freeipa-workload
      containers:
      - name: main
        image: workload
        imagePullPolicy: Always
        command:
        - /usr/local/sbin/init
        args:
        - no-exit
        - ipa-server-install
        - -U
        # TODO Checkout this fields before deploy
        - --realm
        - $(IPA_SERVER_REALM)
        - --ca-subject=$(IPA_SERVER_CA_SUBJECT)
        # TODO Define variable IPA_SERVER_DISABLE=ntp,sshd,ssh
        - --no-ntp
        - --no-sshd
        - --no-ssh
        # - --verbose
        # envFrom:
        #   - name: IPA_SERVER_HOSTNAME
        #     configMapRef:
        #       name: config

        # TODO Use envFrom instead of env, storing all the
        #      environment variables in a ConfigMap.
        env:
        # - name: KRB5_TRACE
        #   value: /dev/console
        # - name: SYSTEMD_LOG_LEVEL
        #   value: debug
        # - name: SYSTEMD_LOG_COLOR
        #   value: "no"
        # - name: INIT_WRAPPER
        #   value: "1"
        # - name: DEBUG_TRACE
        #   value: "2"
        - name: IPA_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: $(SECRET_NAME)
              key: IPA_ADMIN_PASSWORD
              optional: false
        - name: IPA_DM_PASSWORD
          valueFrom:
            secretKeyRef:
              name: $(SECRET_NAME)
              key: IPA_DM_PASSWORD
              optional: false
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: IPA_SERVER_HOSTNAME
          value: $(IPA_SERVER_HOSTNAME)
        - name: container_uuid
          value: b01e51533bce49ce92b6bd4680edd46e
        - name: SYSTEMD_OFFLINE
          value: "0"
        - name: SYSTEMD_NSPAWN_API_VFS_WRITABLE
          value: network
        ports:
        - containerPort: 443
          name: https-tcp
          protocol: TCP
        resources:
          limits:
            cpu: 2000m
            memory: 4Gi
          requests:
            cpu: 1500m
            memory: 3Gi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - CHOWN
            - FOWNER
            - DAC_OVERRIDE
            - SETUID
            - SETGID
            # Without FSETID the ccache files created has the permissions below:
            #   -rw-rw----. 1 apache apache 3464 Nov 23 21:00 host~freeipa.apps.crc.testing@APPS.CRC.TESTING-z0WzhM
            # With FSETID the ccache files created has the permissions below:
            #   -rw-------. 1 ipaapi ipaapi 5068 Nov 23 21:12 host~freeipa.apps.crc.testing@APPS.CRC.TESTING-YQgWH4
            # In both cases the /run/ipa/ccaches directory has the permissions: drwsrws---+
            #
            # The running process has effective uid:gid=ipaapi:ipaapi so FSETID makes the files
            # to inherit the owner and group from the directory because the set-user-id and set-group-id
            # are set for the directory that contain them.
            #
            # Without FSETID capability the ccache files created are not accessible by the wsgi process
            # evoking the kerberos authentication to fail. It evoked sssd client installation step to
            # fail too as in the step is invoked a RPC method on the wsgi service that has to be
            # authenticated.
            - FSETID
            - KILL
            - NET_BIND_SERVICE
            - SETPCAP
            - SETFCAP
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - NET_RAW
            - SYS_CHROOT
            - AUDIT_CONTROL
            - AUDIT_READ
            - BLOCK_SUSPEND
            - DAC_READ_SEARCH
            - IPC_LOCK
            - IPC_OWNER
            - LEASE
            - LINUX_IMMUTABLE
            - MAC_ADMIN
            - MAC_OVERRIDE
            - NET_ADMIN
            - NET_BROADCAST
            - SYS_BOOT
            - SYS_MODULE
            - SYS_NICE
            - SYS_PACCT
            - SYS_PTRACE
            - SYS_RAWIO
            - SYS_TIME
            - SYS_TTY_CONFIG
            - SYSLOG
            - WAKE_ALARM
            - SYS_RAWIO
            - MKNOD
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        # https://kubernetes.io/docs/tasks/configure-pod-container/attach-handler-lifecycle-event/
        # https://www.freedesktop.org/software/systemd/man/systemd.html#SIGRTMIN+3
        lifecycle:
          preStop:
            exec:
              command: ["kill", "-RTMIN+3", "1"]
        tty: true
        volumeMounts:
        # freeipa-data to be completed by the patches
        - mountPath: /tmp
          name: systemd-tmp
        - mountPath: /var/run
          name: systemd-var-run
        - mountPath: /var/run/dirsrv
          name: systemd-var-dirsrv
      volumes:
      # freeipa-data volume to be completed by the patch for ephemeral only
      - name: systemd-var-run
        emptyDir:
          medium: Memory
      - name: systemd-var-dirsrv
        emptyDir:
          medium: Memory
      - name: systemd-run-rpcbind
        emptyDir:
          medium: Memory
      - name: systemd-tmp
        emptyDir:
          medium: Memory
